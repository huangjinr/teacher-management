<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.huangjin.dao.ClassroomTeachingMapper" >
  <resultMap id="BaseResultMap" type="cn.huangjin.domain.ClassroomTeaching" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="course" property="course" jdbcType="VARCHAR" />
    <result column="schooltime" property="schooltime" jdbcType="VARCHAR" />
    <result column="team" property="team" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, teacher, course, schooltime, team, address, score
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.huangjin.domain.ClassroomTeachingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classroom_teaching
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from classroom_teaching
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from classroom_teaching
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.huangjin.domain.ClassroomTeachingExample" >
    delete from classroom_teaching
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.huangjin.domain.ClassroomTeaching" >
    insert into classroom_teaching (id, teacher, course, 
      schooltime, team, address, 
      score)
    values (#{id,jdbcType=INTEGER}, #{teacher,jdbcType=VARCHAR}, #{course,jdbcType=VARCHAR}, 
      #{schooltime,jdbcType=VARCHAR}, #{team,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.huangjin.domain.ClassroomTeaching" >
    insert into classroom_teaching
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="course != null" >
        course,
      </if>
      <if test="schooltime != null" >
        schooltime,
      </if>
      <if test="team != null" >
        team,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="score != null" >
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="course != null" >
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="schooltime != null" >
        #{schooltime,jdbcType=VARCHAR},
      </if>
      <if test="team != null" >
        #{team,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.huangjin.domain.ClassroomTeachingExample" resultType="java.lang.Integer" >
    select count(*) from classroom_teaching
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update classroom_teaching
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.teacher != null" >
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.course != null" >
        course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.schooltime != null" >
        schooltime = #{record.schooltime,jdbcType=VARCHAR},
      </if>
      <if test="record.team != null" >
        team = #{record.team,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update classroom_teaching
    set id = #{record.id,jdbcType=INTEGER},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      course = #{record.course,jdbcType=VARCHAR},
      schooltime = #{record.schooltime,jdbcType=VARCHAR},
      team = #{record.team,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.huangjin.domain.ClassroomTeaching" >
    update classroom_teaching
    <set >
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="course != null" >
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="schooltime != null" >
        schooltime = #{schooltime,jdbcType=VARCHAR},
      </if>
      <if test="team != null" >
        team = #{team,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.huangjin.domain.ClassroomTeaching" >
    update classroom_teaching
    set teacher = #{teacher,jdbcType=VARCHAR},
      course = #{course,jdbcType=VARCHAR},
      schooltime = #{schooltime,jdbcType=VARCHAR},
      team = #{team,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>